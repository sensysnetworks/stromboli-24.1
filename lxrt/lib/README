
                        RTAI LXRT liblxrt

liblxrt.a works just fine. The examples ../ipc ../traps and ../qblk 
link with it and work. Paolo's examples are compiled the old way with
static inline functions and also work.

liblxrt.so also works well. Do not forget to include the library path
into file /etc/ld.so.config and run ldconfig each time to recompile the
library if you plan to use it. 
 
Paolo can continue to use static inlines by adding the define
#define KEEP_STATIC_INLINES before including rtai_lxrt_user.h and
rtai_lxrt.h.

Notice that file rtai_lxrt_user.h whose main purpose is to simplify
the API for GUI applications so that kernel headers need not be included
also makes life easier for g++. See the C++ example next door.

Acknowledgment to Tomasz Motylewski for his file touchall.c that provides
the function lock_all(). It grows the stack and locks all the pages of
memory so that exception 14 vectors need not be handled while in LXRT
hard real time mode. 

(C) Pierre Cloutier <pcloutier@PoseidonControls.com> LGPLv2 
